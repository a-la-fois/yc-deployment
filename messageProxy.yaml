apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-proxy-deployment
  labels:
    app: message-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-proxy
  template:
    metadata:
      labels:
        app: message-proxy
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "message-proxy"
        dapr.io/app-port: "3000"
    spec:
      containers:
        - name: message-proxy
          image: cr.yandex/crpmiu1h5mdish4lqlu2/message-proxy:0.0.3
          ports:
            - containerPort: 3000
          env:
            - name: KAFKA_USERNAME
              valueFrom: 
                secretKeyRef:
                  name: kafka-secret 
                  key: username
            - name: KAFKA_PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: kafka-secret 
                  key: password
         
            - name: KAFKA_CHANGES_TOPIC 
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: kafka-changes-topic
            - name: KAFKA_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: kafka-hosts 
            - name: KAFKA_CA_PATH
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: kafka-ca-path
            - name: KAFKA_SASL_MECHANISM 
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: kafka-sasl-mechanism

          volumeMounts:
            - name: yc-cert
              mountPath: "/config"
              readOnly: true
      volumes:
        - name: yc-cert
          configMap:
            name: config
            items:
              - key: 'YandexCA.crt'
                path: 'YandexCA.crt'


---

apiVersion: v1
kind: Service
metadata:
  name: message-proxy-service
spec:
  type: LoadBalancer
  selector:
    app: message-proxy
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30000

